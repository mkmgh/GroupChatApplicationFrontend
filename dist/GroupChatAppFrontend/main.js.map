{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/chat/chat-box/chat-box.component.css","webpack:///./src/app/chat/chat-box/chat-box.component.html","webpack:///./src/app/chat/chat-box/chat-box.component.ts","webpack:///./src/app/chat/chat-group-details/chat-group-details.component.css","webpack:///./src/app/chat/chat-group-details/chat-group-details.component.html","webpack:///./src/app/chat/chat-group-details/chat-group-details.component.ts","webpack:///./src/app/chat/chat-group-join/chat-group-join.component.css","webpack:///./src/app/chat/chat-group-join/chat-group-join.component.html","webpack:///./src/app/chat/chat-group-join/chat-group-join.component.ts","webpack:///./src/app/chat/chat-route-guard.service.ts","webpack:///./src/app/chat/chat.module.ts","webpack:///./src/app/chat/edit-chat-group-details/edit-chat-group-details.component.css","webpack:///./src/app/chat/edit-chat-group-details/edit-chat-group-details.component.html","webpack:///./src/app/chat/edit-chat-group-details/edit-chat-group-details.component.ts","webpack:///./src/app/shared/first-char/first-char.component.css","webpack:///./src/app/shared/first-char/first-char.component.html","webpack:///./src/app/shared/first-char/first-char.component.ts","webpack:///./src/app/shared/pipe/remove-special-char.pipe.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/user-details/user-details.component.css","webpack:///./src/app/shared/user-details/user-details.component.html","webpack:///./src/app/shared/user-details/user-details.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/app/user/forgot-password/forgot-password.component.css","webpack:///./src/app/user/forgot-password/forgot-password.component.html","webpack:///./src/app/user/forgot-password/forgot-password.component.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/reset-password/reset-password.component.css","webpack:///./src/app/user/reset-password/reset-password.component.html","webpack:///./src/app/user/reset-password/reset-password.component.ts","webpack:///./src/app/user/signup/signup.component.css","webpack:///./src/app/user/signup/signup.component.html","webpack:///./src/app/user/signup/signup.component.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'GroupChatAppFrontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n\n//routing \nimport { RouterModule, Routes } from '@angular/router';\nimport { UserModule } from './user/user.module';\nimport { ChatModule } from './chat/chat.module';\nimport { LoginComponent } from './user/login/login.component';\nimport { SignupComponent } from './user/signup/signup.component';\n\n//for Http service\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppService } from './app.service';\n\n//for toast message\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    HttpClientModule,\n    ChatModule,\n    UserModule,\n    RouterModule.forRoot([\n      { path: 'login', component: LoginComponent, pathMatch: 'full' },\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n      { path: '*', component: LoginComponent },\n      { path: '**', component: LoginComponent }\n    ])\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n//for using cookies\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n//Importing the required files for http services.\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n//import { Observable } from 'rxjs';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AppService {\n\n  private url =  'http://api-chatapp.emayurm.in.net';\n\n  constructor(\n    public http: HttpClient\n  ) {\n\n  } // end constructor  \n\n\n  public getUserInfoFromLocalstorage = () => {\n\n    return JSON.parse(localStorage.getItem('userInfo'));\n\n  } // end getUserInfoFromLocalstorage\n\n\n  public setUserInfoInLocalStorage = (data) =>{\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n\n\n  }\n\n  public signupFunction(data): Observable<any> {\n\n    const params = new HttpParams()\n      .set('firstName', data.firstName)\n      .set('lastName', data.lastName)\n      .set('mobile', data.mobile)\n      .set('email', data.email)\n      .set('password', data.password)\n\n    return this.http.post(`${this.url}/api/v1/users/signup`, params);\n\n  } // end of signupFunction function.\n\n  public signinFunction(data): Observable<any> {\n    \n    const params = new HttpParams()\n      .set('email', data.email)\n      .set('password', data.password);\n      \n    return this.http.post(`${this.url}/api/v1/users/login`, params);\n  } // end of signinFunction function.\n\n\n  public sendResetLink(email): Observable<any> {\n   // console.log(this.url+\"/api/v1/users/forgotPassword\");\n    const params = new HttpParams()\n    .set('email', email)\n    return this.http.post(`${this.url}/api/v1/users/forgotPassword`,params);\n  } // end of sendResetLink function.\n\n  public resetPassword(data: any): Observable<any> {\n    const params = new HttpParams()\n      .set('userId', data.userId)\n      .set('password', data.password);\n    return this.http.post(`${this.url}/api/v1/users/resetPassword`, params);\n\n  }//end resetPassword Function\n\n\n  public getChat(receiverid, skip): Observable<any> {\n\n    return this.http.get(`${this.url}/api/v1/chat/getGroupChat?chatRoomId=${receiverid}&skip=${skip}&authToken=${Cookie.get('authToken')}`)\n\n  }//end getChat function\n\n  public createGroup(data: any): Observable<any> {\n    const params = new HttpParams()\n      .set('userEmail', data.email)\n      .set('roomName', data.grpname);\n\n    return this.http.post(`${this.url}/api/v1/chatRoom/createChatRoom`, params);\n\n  }//end createGroup\n\n  public getGroups(): Observable<any> {\n\n    return this.http.get(`${this.url}/api/v1/chatRoom/getChatRooms`);\n\n  }//end getGroups\n\n  public getGroup(data): Observable<any>{\n\n    return this.http.get(`${this.url}/api/v1/chatRoom/${data}/getChatRoom`);\n\n  }\n\n\n  public editGroup(data): Observable<any>{\n\n    const params = new HttpParams()\n      .set('roomName', data.roomName);\n\n    return this.http.put(`${this.url}/api/v1/chatRoom/${data.chatRoomId}/editChatRoom`,params);\n\n  }\n\n\n  public joinGroup(data: any): Observable<any> {\n\n    const params = new HttpParams()\n      .set('userEmail', data.userEmail)\n      .set('chatRoomId', data.roomId);\n\n    return this.http.post(`${this.url}/api/v1/chatRoom/joinChatRoom`, params);\n  }//end joinGroup\n\n  public closeGroup(data): Observable<any> {\n\n    return this.http.get(`${this.url}/api/v1/chatRoom/${data}/closeGroup`);\n  }//end closeGroup\n  \n  public sendInvite(data: any): Observable<any> {\n\n    const params = new HttpParams()\n      .set('userEmail', data.userEmail)\n      .set('chatRoomId', data.roomId);\n\n    return this.http.post(`${this.url}/api/v1/chatRoom/sendInvite`, params);\n  }//end sendInvite\n\n  public deleteGroup(data: any): Observable<any> {\n\n    const params = new HttpParams()\n      .set('chatRoomId', data);\n\n    return this.http.put(`${this.url}/api/v1/chatRoom/deleteChatRoom`, params);\n  }//end deleteGroup\n\n  public logout(): Observable<any> {\n\n    const params = new HttpParams()\n      .set('authToken', Cookie.get('authtoken'))\n\n    return this.http.post(`${this.url}/api/v1/users/logout`, params);\n\n  } // end logout function\n\n\n\n  private handleError(err: HttpErrorResponse) {\n\n    let errorMessage = '';\n\n    if (err.error instanceof Error) {\n\n      errorMessage = `An error occurred: ${err.error.message}`;\n\n    } else {\n\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n\n    } // end condition *if\n\n    console.error(errorMessage);\n\n    //return Observable.throw(errorMessage);\n\n  }  // END handleError\n\n}\n","module.exports = \"/*navbar style*/\\n.navbar-custom {\\n  background-color:#42a1f4;\\n \\n}\\n#collapsibleNavbar a:hover{\\n   background-color:#E7717D;\\n   color:white;\\n}\\n.font-adjust{\\nfont-family:garamond;\\nfont-weight:bold;\\n\\n}\\n.online{\\n\\n  height: 10px;\\n  width: 10px;\\n  background-color:green;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n.offline{\\n\\n  height: 10px;\\n  width: 10px;\\n  background-color:red;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n.font-green{\\n  color: green;\\n}\\n.rightSideClass {\\n    float: right;\\n    background: #ddd;\\n    border-radius: 0.5em;\\n  }\\n.leftSideClass {\\n    float: left;\\n    background: #55C1E7;\\n    border-radius: 0.5em;\\n  }\\n.circle-green:before {\\n    content: ' \\\\25CF';\\n    font-size: 1em;\\n    color: green;\\n  }\\n.circle-red:before {\\n    content: ' \\\\25CF';\\n    font-size: 1em;\\n    color: red;\\n  }\\n.cursorPointer {\\n    cursor: pointer;\\n  }\\n.textCenter {\\n    text-align: center;\\n  }\\n.floatLeft {\\n    float: left;\\n  }\\n*,\\n  *:before,\\n  *:after {\\n    box-sizing: border-box;\\n  }\\nbody {\\n    padding: 2.5em 0;\\n    color: white;\\n  }\\n.container {\\n    margin: 0 auto;\\n    background: #444753;\\n    border-radius: 0.3em;\\n  }\\n.people-list {\\n    float: left;\\n  }\\n.people-list input {\\n    border-radius: 0.2em;\\n    border: none;\\n    padding: 1em;\\n    color: white;\\n    background: #6A6C75;\\n    width: 90%;\\n    font-size: 1em;\\n  }\\n.people-list .fa-search {\\n    position: relative;\\n    left: -1.8em;\\n  }\\n.people-list ul {\\n    padding: 0;\\n  }\\n.people-list ul li .userPresence {\\n    float: left;\\n    padding: 0.7em 0.2em;\\n    color: white;\\n    text-transform: capitalize;\\n  }\\n.textCapitalize {\\n    text-transform: capitalize;\\n    font-size: 1.2em;\\n  }\\n.people-list img {\\n    float: left;\\n  }\\n.people-list .about {\\n    float: left;\\n  }\\n.people-list .about {\\n    padding-left: 0.4em;\\n  }\\n.people-list .status {\\n    color: #92959E;\\n  }\\n.chat {\\n    height: 100vh;\\n    float: left;\\n    background: #F2F5F8;\\n    border-top-right-radius: 0.3em;\\n    border-bottom-right-radius: 0.3em;\\n    color: #434651;\\n  }\\n.chat .chat-header {\\n    padding: 0.2em;\\n    border-bottom: 0.15em solid white;\\n  }\\n.chat .chat-header img {\\n    float: left;\\n  }\\n.chat .chat-header .chat-about {\\n    float: left;\\n    padding-left: 0.8em;\\n    margin-top: 0.4em;\\n  }\\n.chat .chat-header .dropdown{\\n    float: right;\\n  }\\n.chat .chat-header .chat-with {\\n    font-weight: bold;\\n    font-size: 1.1em;\\n  }\\n.chat .chat-header .chat-num-messages {\\n    color: #92959E;\\n  }\\n.chat .chat-header .fa-star {\\n    float: right;\\n    color: #D8DADF;\\n    font-size: 1.42em;\\n    margin-top: 0.85em;\\n  }\\n.chat .chat-history {\\n    padding: 2em 2em 1.42em;\\n    border-bottom: 0.15em solid white;\\n    overflow-y: scroll;\\n    height: 80vh;\\n  }\\n.chat .chat-history .message-data {\\n    margin-bottom: 1em;\\n  }\\n.chat .chat-history .message-data-time {\\n    color: #a8aab1;\\n    padding-left: 0.4em;\\n  }\\n.chat .chat-history .message {\\n    color: white;\\n    padding: 0.5em 1.42em;\\n    line-height: 1.9em;\\n    font-size: 1.1em;\\n    border-radius: 7px;\\n    margin-bottom: 2em;\\n    width: 90%;\\n    position: relative;\\n  }\\n.chat .chat-history .message:after {\\n    bottom: 100%;\\n    left: 7%;\\n    border: solid transparent;\\n    content: \\\" \\\";\\n    height: 0;\\n    width: 0;\\n    position: absolute;\\n    pointer-events: none;\\n    border-bottom-color: #86BB71;\\n    border-width: 0.8em;\\n    margin-left: -0.8em;\\n  }\\n.chat .chat-history .my-message {\\n    background: #86BB71;\\n  }\\n.chat .chat-history .other-message {\\n    background: #94C2ED;\\n  }\\n.chat .chat-history .other-message:after {\\n    border-bottom-color: #94C2ED;\\n    left: 90%;\\n  }\\n.chat .chat-message textarea {\\n    width: 100%;\\n    border: none;\\n    padding: 0.8em 1.42em;\\n    margin-bottom: 0.8em;\\n    border-radius: 5px;\\n    resize: none;\\n  }\\n.chat .chat-message .fa-file-o,\\n  .chat .chat-message .fa-file-image-o {\\n    font-size: 1.1em;\\n    color: gray;\\n    cursor: pointer;\\n  }\\n.chat .chat-message button {\\n    float: right;\\n    color: #94C2ED;\\n    font-size: 1.1em;\\n    text-transform: uppercase;\\n    border: none;\\n    cursor: pointer;\\n    font-weight: bold;\\n    background: #F2F5F8;\\n  }\\n.chat .chat-message button:hover {\\n    color: #75b1e8;\\n  }\\n.online,\\n  .offline,\\n  .me,\\n  .warning {\\n    margin-right: 3px;\\n    font-size: 0.8em;\\n  }\\n.online {\\n    color: #86BB71;\\n  }\\n.offline {\\n    color: #E38968;\\n  }\\n.me {\\n    color: #94C2ED;\\n  }\\n.warning {\\n    color: #e78930;\\n  }\\n.align-left {\\n    text-align: left;\\n  }\\n.align-right {\\n    text-align: right;\\n  }\\n.float-right {\\n    float: right;\\n  }\\n.clearfix:after {\\n    visibility: hidden;\\n    display: block;\\n    font-size: 0;\\n    content: \\\" \\\";\\n    clear: both;\\n    height: 0;\\n  }\\n.customButton {\\n    width: 100%;\\n  }\\n.activeChat {\\n    background: #393a41;\\n  }\\n.typeOfChats {\\n    background: #393a41;\\n    color: white;\\n    margin-top: 0.2em;\\n    margin-bottom: 0.2em;\\n  }\\n.blankContent{\\n    height: 100vh;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    font-size: 3rem;\\n    color: #999;\\n  }\\n@media only screen and (max-width:575px) {\\n    .chat .chat-history {\\n      height:50vh;\\n    }\\n  }\\n@media only screen and (min-width:576px) and (max-width:768px) {\\n    .chat .chat-history {\\n      height:50vh;\\n    }\\n  }\\n@media only screen and (min-width:769px) and (max-width:992px) {\\n    .chat .chat-history {\\n      height:65vh;\\n    }\\n  }\\n@media only screen and (min-width:993px) and (max-width:1200  px) {\\n    .chat .chat-history {\\n      height:50vh;\\n    }\\n  }\\n/* user list items */\\n.crop {\\n  border-radius: 100%;\\n  line-height: 1em;\\n  padding: 1em;\\n  text-align: center;\\n  margin: 0em;\\n  width: 3em;\\n  height: 3em;\\n  float: left;\\n  text-transform: uppercase;\\n}\\n.about {\\n  float: left;\\n  padding-left: 0.4em;\\n}\\n.online,\\n.offline,\\n.me,\\n.warning {\\n  margin-right: 3px;\\n  font-size: 0.8em;\\n}\\n.online {\\n  color: #86BB71;\\n}\\n.offline {\\n  color: #E38968;\\n}\\n.me {\\n  color: #94C2ED;\\n}\\n.warning {\\n  color: #00c8e7;\\n}\\n.status {\\n  color: #92959E;\\n}\\n.name {\\n  float: left;\\n}\"","module.exports = \"<div id=\\\"mycontent\\\">\\n  <nav class=\\\"navbar navbar-expand-md navbar-custom navbar-dark\\\">\\n    <div class=\\\"container-fluid\\\" style=\\\"border: 2px black solid\\\">\\n      <a class=\\\"navbar-brand font-adjust\\\" href=\\\"\\\">Group Chat Application\\n      </a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavbar\\\">\\n        <span></span>\\n        <i class=\\\"fa fa-ellipsis-v text-dark\\\"></i>\\n      </button>\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavbar\\\">\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n          <li>\\n            <!-- Button trigger modal -->\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\">\\n              Create Group\\n            </button>\\n\\n            <!-- Modal -->\\n            <div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n              <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                  <div class=\\\"modal-body\\\">\\n                    \\n                    <form #CreateGroupForm=\\\"ngForm\\\" (ngSubmit)=\\\"createGroup()\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label style=\\\"color: black\\\">Group Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"groupName\\\" [(ngModel)]=\\\"groupName\\\" #groupName1=\\\"ngModel\\\" placeholder=\\\"Enter Group Name\\\" required>\\n                      </div>\\n                      <div [hidden]='groupName1.valid || groupName1.pristine' class=\\\"alert alert-danger\\\">\\n                        Group name is required\\n                      </div>\\n              \\n                      <button type=\\\"submit\\\" class=\\\"btn btn-block btn-success\\\">Create Group</button>\\n                    </form>\\n            \\n\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </li>\\n\\n          <li class=\\\"nav-item\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal3\\\" (click)=\\\"logout()\\\">\\n              Logout\\n            </button>\\n\\n          </li>\\n\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n  <!-- navbar end -->\\n\\n\\n  <div class=\\\"container\\\" style=\\\"border: 2px black solid\\\">\\n    <div class=\\\"row\\\">\\n  \\n      <div class=\\\"displayBlockMobile d-block d-sm-none\\\" style=\\\"width:100%;z-index:1;\\\">\\n  \\n        <div class=\\\"col-sm-12 p-0\\\">\\n  \\n          <nav class=\\\"navbar navbar-expand-md  navbar-dark bg-dark\\\">\\n  \\n            <a class=\\\"navbar-brand text-white\\\">\\n              {{userInfo.firstName}} {{userInfo.lastName}}\\n              <i class=\\\"fa fa-circle online\\\" *ngIf=\\\"disconnectedSocket == false\\\"></i>\\n              <i class=\\\"fa fa-circle offline\\\" *ngIf=\\\"disconnectedSocket == true\\\"></i>\\n            </a>\\n  \\n            <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n              aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n  \\n              <span class=\\\"navbar-toggler-icon\\\"></span>\\n  \\n            </button>\\n  \\n            <div class=\\\"collapse people-list navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n             <!-- <button (click)=\\\"logout()\\\" class=\\\"btn btn-info customButton\\\">Logout</button>-->\\n              <ul class=\\\"list\\\">\\n                <li class=\\\"p-2 typeOfChats\\\">\\n                  Groups joined:\\n                </li>\\n                <li class=\\\"clearfix cursorPointer\\\" *ngFor=\\\"let group of groupsJoined\\\" (click)=\\\"userSelectedToChat(group.roomId, group.roomName, group.admin)\\\">\\n                  <div class=\\\"userPresence\\\" [hidden]=\\\"!group.status\\\">\\n                    <user-details [userFirstName]=\\\"group.roomName\\\" [userLastName]=\\\"''\\\" [userStatus]=\\\"'Active'\\\" [messageRead]=\\\"false\\\"></user-details>\\n                  </div>\\n                </li>\\n                <li class=\\\"p-2 typeOfChats\\\">\\n                  Other Groups:\\n                </li>\\n                <li class=\\\"clearfix cursorPointer\\\" *ngFor=\\\"let group of otherGroups\\\" (click)=\\\"groupSelectedToChat(group.roomId,group.roomName)\\\">\\n                  <div class=\\\"userPresence\\\" [hidden]=\\\"!group.status\\\">\\n                    <user-details [userFirstName]=\\\"group.roomName\\\" [userLastName]=\\\"''\\\" [userStatus]=\\\"'Active'\\\" [messageRead]=\\\"false\\\"></user-details>\\n                  </div>\\n                </li>\\n              </ul>\\n  \\n            </div>\\n  \\n          </nav>\\n  \\n        </div>\\n  \\n      </div>\\n  \\n      <div class=\\\"col-12 displayNoneMobile d-none d-sm-block col-sm-4 col-md-4 people-list p-0\\\" id=\\\"people-list\\\">\\n  \\n        <div class=\\\"p-3 text-white textCapitalize textCenter\\\">\\n          {{userInfo.firstName}} {{userInfo.lastName}}\\n          <i class=\\\"fa fa-circle online\\\" *ngIf=\\\"disconnectedSocket == false\\\"></i>\\n          <i class=\\\"fa fa-circle offline\\\" *ngIf=\\\"disconnectedSocket == true\\\"></i>\\n          <br>\\n          <br>\\n         <!-- <button (click)=\\\"logout()\\\" class=\\\"btn btn-info customButton\\\">Logout</button> -->\\n        </div>\\n\\n  \\n        <ul class=\\\"list\\\">\\n          <li class=\\\"p-2 typeOfChats\\\">\\n            Groups joined:\\n          </li>\\n          <li class=\\\"clearfix cursorPointer\\\" *ngFor=\\\"let group of groupsJoined\\\" (click)=\\\"userSelectedToChat(group.roomId, group.roomName, group.admin)\\\">\\n            <div class=\\\"userPresence\\\" [hidden]=\\\"!group.status\\\">\\n              <user-details [userFirstName]=\\\"group.roomName\\\" [userLastName]=\\\"''\\\" [userStatus]=\\\"'Active'\\\" [messageRead]=\\\"false\\\"></user-details>\\n            </div>\\n          </li>\\n          <li class=\\\"p-2 typeOfChats\\\">\\n            Other Groups:\\n          </li>\\n          <li class=\\\"clearfix cursorPointer\\\" *ngFor=\\\"let group of otherGroups\\\" (click)=\\\"groupSelectedToChat(group.roomId,group.roomName)\\\">\\n            <div class=\\\"userPresence\\\" [hidden]=\\\"!group.status\\\">\\n              <user-details [hidden]=\\\"!group.status\\\" [userFirstName]=\\\"group.roomName\\\" [userLastName]=\\\"''\\\" [userStatus]=\\\"'Active'\\\" [messageRead]=\\\"false\\\"></user-details>\\n            </div>\\n          </li>\\n        </ul>\\n  \\n  \\n      </div>\\n  \\n      <div class=\\\"col-12 col-sm-8 col-md-8 chat \\\">\\n        <div class=\\\"chat-header clearfix mobileMenu\\\" *ngIf=\\\"receiverName\\\">\\n          <first-char class=\\\"cursorPointer\\\" [name]=\\\"receiverName\\\" [userBg]=\\\"'blue'\\\" [userColor]=\\\"'white'\\\" (notify)=\\\"showGroupName($event)\\\"></first-char>\\n  \\n          <div class=\\\"chat-about\\\">\\n            <div class=\\\"chat-with\\\">Chat with {{receiverName}}</div>\\n            <div class=\\\"chat-with font-green\\\" *ngIf='personTyping'>{{personTyping}} is typing...</div>\\n          </div>\\n          <div class=\\\"dropdown\\\" [hidden]='groupMember'>\\n            <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n              <i class=\\\"fas fa-ellipsis-v\\\"></i>\\n            </button>\\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n              <form class=\\\"px-4 py-3\\\" #InviteForm (ngSubmit)=\\\"sendInvite()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"exampleDropdownFormEmail1\\\">Email address</label>\\n                  <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"userMail\\\" [(ngModel)]=\\\"userMail\\\" #userMail1=\\\"ngModel\\\" placeholder=\\\"email@example.com\\\"\\n                    required>\\n                </div>\\n                <div [hidden]='userMail1.valid || userMail1.pristine' class=\\\"alert alert-danger\\\">\\n                  Email is required\\n                </div>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-block btn-primary\\\">Invite</button>\\n              </form>\\n              <a class=\\\"dropdown-item btn\\\" routerLink=\\\"/groupDetails/{{receiverId}}\\\">Group Details</a>\\n              <a class=\\\"dropdown-item btn\\\" (click)=\\\"closeGroup()\\\">Close Group</a>\\n              <a class=\\\"dropdown-item btn\\\" (click)=\\\"deleteGroup()\\\">Delete Group</a>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- end chat-header -->\\n  \\n        <div #scrollMe [scrollTop]=\\\"(scrollToChatTop)?0:scrollMe.scrollHeight\\\" class=\\\"chat-history\\\" *ngIf=\\\"receiverName\\\">\\n  \\n          <ul [hidden]='groupMember'>\\n            <li class=\\\"textCenter\\\" *ngIf=\\\"receiverName\\\">\\n  \\n              <span class=\\\"cursorPointer\\\" (click)=\\\"loadEarlierPageOfChat()\\\">Load Previous Chat</span>\\n  \\n              <br>\\n  \\n              <span *ngIf=\\\"loadingPreviousChat == true\\\">Loading...</span>\\n  \\n            </li>\\n            <li class=\\\"clearfix\\\" *ngFor=\\\"let message of messageList\\\">\\n              <div class=\\\"message-data\\\" [ngClass]=\\\"{'align-right': message.senderId == userInfo.userId}\\\">\\n                <span class=\\\"message-data-time\\\">{{message?.createdOn | date: 'medium' }}</span> &nbsp; &nbsp;\\n                <span class=\\\"message-data-name floatLeft\\\" *ngIf=\\\"message.senderId != userInfo.userId\\\">\\n                  <i class=\\\"fa fa-circle online\\\"></i> {{ message?.senderName }}</span>\\n                <span class=\\\"message-data-name\\\" *ngIf=\\\"message.senderId == userInfo.userId\\\">{{ message?.senderName }}</span>\\n                <i class=\\\"fa fa-circle me\\\" *ngIf=\\\"message.senderId == userInfo.userId\\\"></i>\\n  \\n              </div>\\n              <div class=\\\"message\\\" [ngClass]=\\\"{'float-right other-message': message.senderId == userInfo.userId, 'my-message': message.senderId != userInfo.userId}\\\">\\n                {{message?.message }}\\n              </div>\\n            </li>\\n  \\n          </ul>\\n  \\n        </div>\\n        <div *ngIf=\\\"!receiverName\\\" class=\\\"col-sm blankContent\\\">\\n          Click on Group to start a GroupChat!!!\\n        </div>\\n        <!-- end chat-history -->\\n  \\n        <div class=\\\"chat-message clearfix p-2\\\" *ngIf=\\\"receiverName\\\" [hidden]='groupMember'>\\n\\n          <div class=\\\"row\\\"> \\n              <div class=\\\"col-10\\\">\\n                  <textarea name=\\\"message-to-send\\\" id=\\\"message-to-send\\\" (keypress)=\\\"userTyping($event)\\\" (keydown)=\\\"sendMessageUsingKeypress($event)\\\"\\n                  [(ngModel)]=\\\"messageText\\\" placeholder=\\\"Type your message\\\"></textarea>\\n              </div>\\n              <div class=\\\"col-1\\\">\\n                <!--  <i class=\\\"fas fa-play\\\" (click)=\\\"sendMessage()\\\"></i>-->\\n                <!--<button (click)=\\\"sendMessage()\\\">Send</button>-->\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"sendMessage()\\\">Send</button>\\n              </div>\\n            </div>\\n  \\n        </div>\\n        <!-- end chat-message -->\\n        <!--Join Group Button-->\\n        <button class=\\\"btn btn-primary btn-block\\\" [hidden]=\\\"!groupMember\\\" (click)=\\\"joinGroup(receiverName,receiverId)\\\">Join Group</button>\\n      </div>\\n  \\n    </div>\\n    <!-- end chat -->\\n  \\n  </div>\\n  <!-- end container -->\\n\\n\\n</div>\"","import { Component, OnInit, ViewContainerRef, ViewChild, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { SocketService } from './../../socket.service';\nimport { AppService } from './../../app.service';\n\nimport { Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { ToastrService } from 'ngx-toastr';\nimport { FirstCharComponent } from '../../shared/first-char/first-char.component';\n\nimport { ChatMessage } from './chat'\nimport { CheckUser } from '../../checkUser';\n\n\n@Component({\n  selector: 'app-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.css'],\n  providers: [SocketService]\n})\n\nexport class ChatBoxComponent implements OnInit, CheckUser, OnChanges{\n\n  ngOnChanges(changes: SimpleChanges): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  @ViewChild('scrollMe', { read: ElementRef }) \n  \n  public scrollMe: ElementRef;\n\n  \n\n  public authToken: any;\n  public userInfo: any;\n  public userList: any = [];\n  public disconnectedSocket: boolean; \n  public groupName: string;\n  public groupsJoined: any = [];\n  public otherGroups: any = [];\n  public groupMember: boolean = false;\n\n\n  public scrollToChatTop:boolean= false;\n\n  public receiverId: any;\n  public receiverName: any;\n  public previousChatList: any = [];\n  public messageText: any; \n  public messageList: any = []; // stores the current message list display in chat box\n  public pageValue: number = 0;\n  public loadingPreviousChat: boolean = false;\n  public userMail: string;\n  public personTyping: string;\n\n\n  constructor(\n    public AppService: AppService,\n    public SocketService: SocketService,\n    public router: Router,\n    private toastr: ToastrService,\n  ) {\n  }\n\n\n\n  ngOnInit() {\n\n    this.authToken = Cookie.get('authtoken');\n\n    this.userInfo = this.AppService.getUserInfoFromLocalstorage();\n\n    this.receiverId = Cookie.get(\"receiverId\");\n\n    this.receiverName =  Cookie.get('receiverName');\n\n    console.log(this.receiverId,this.receiverName)\n\n    if(this.receiverId!=null && this.receiverId!=undefined && this.receiverId!=''){\n      this.userSelectedToChat(this.receiverId,this.receiverName)\n    }\n\n    this.checkStatus();\n    this.verifyUserConfirmation();\n    this.getOnlineUserList()\n    this.loadGroup();\n   // this.getMessageFromAUser();\n\n   this.getMessageFromAGroup();\n\n    if (Cookie.get('callMethod')) {\n      this.groupSelectedToChat(this.receiverId, this.receiverName);\n    }\n\n    this.groupCreated();\n    this.groupRemoved();\n    this.refreshGroups();\n    this.typing();\n\n  //  this.joinGroup(this.receiverId, this.receiverName);\n\n\n  }\n\n\n  public checkStatus: any = () => {\n\n    if (Cookie.get('authtoken') === undefined || Cookie.get('authtoken') === '' || Cookie.get('authtoken') === null) {\n\n      this.router.navigate(['/']);\n\n      return false;\n\n    } else {\n\n      return true;\n\n    }\n\n  } // end checkStatus\n\n\n\n  public verifyUserConfirmation: any = () => {\n\n    this.SocketService.verifyUser()\n      .subscribe((data) => {\n\n        this.disconnectedSocket = false;\n\n        this.SocketService.setUser(this.authToken);\n\n      });//end subscribe\n  }//end verifyUserConfirmation\n\n  \n\n  public getOnlineUserList: any = () => {\n\n    this.SocketService.onlineUserList()\n      .subscribe((userListfromdb) => {\n\n        this.userList = [];\n\n        for (let x in userListfromdb) {\n\n          let temp = { 'userId': x, 'name': userListfromdb[x], 'unread': 0, 'chatting': false };\n\n          this.userList.push(temp);\n\n        }\n\n      });//end subscribe\n\n  }//end getOnlineUserList\n\n\n  // chat related methods \n\n  public groupCreated: any = () => {\n\n    this.SocketService.groupCreated()\n      .subscribe((data) => {\n\n        this.toastr.info(`Group Created: ${data}`, \"Update\");\n        this.loadGroup();\n\n      });//end subscribe\n  }//end GroupCreated\n\n  public groupRemoved: any = () => {\n\n    this.SocketService.groupRemoved()\n      .subscribe((data) => {\n\n        this.toastr.info(`Group Removed: ${data}`, \"Update\");\n        this.loadGroup();\n\n      });//end subscribe\n  }//end GroupRemoved\n\n  public getPreviousChatWithAUser: any = () => {\n\n    let previousData = (this.messageList.length > 0 ? this.messageList.slice() : []);\n\n    this.AppService.getChat(this.receiverId, this.pageValue)\n      .subscribe((apiResponse) => {\n\n        if (apiResponse.status == 200) {\n          this.messageList = apiResponse.data.concat(previousData);\n        } else {\n          this.messageList = previousData;\n        }\n        this.loadingPreviousChat = false;\n      }, (err) => {\n        this.toastr.error('some error occured', \"Error!\");\n      });\n\n  }//end getPreviousChatWithAUser\n\n  public loadEarlierPageOfChat: any = () => {\n\n    this.loadingPreviousChat = true;\n\n    this.pageValue++;\n    this.scrollToChatTop = true;\n\n    this.getPreviousChatWithAUser();\n\n  }//end loadPreviousChat\n\n  public userSelectedToChat: any = (id, name) => {\n\n    this.groupMember = false;\n    Cookie.set('receiverId', id);\n    Cookie.set('receiverName', name);\n\n    this.receiverId = id;\n    this.receiverName = name;\n\n    this.messageList = [];\n    this.pageValue = 0;\n    this.scrollToChatTop = false;\n    let chatDetails = {\n      userId: this.userInfo.userId,\n      senderId: id\n    }\n\n    //this.SocketService.markChatAsSeen(chatDetails);\n\n    this.getPreviousChatWithAUser();\n\n  } // end userBtnClick function\n\n\n  public groupSelectedToChat: any = (id, name) => {\n\n    this.groupMember = true;\n\n    Cookie.set('receiverId', id);\n    Cookie.set('receiverName', name);\n\n    this.receiverId = id;\n    this.receiverName = name;\n\n  }//end groupSelectedToChat\n\n\n  public sendMessageUsingKeypress: any = (event: any) => {\n\n    if (event.keyCode === 13) { // 13 is keycode of enter.\n\n      this.sendMessage();\n\n    }\n\n  } // end sendMessageUsingKeypress\n\n\n  public userTyping: any = (event: any) => {\n\n    let data: any = {};\n    data.room = Cookie.get('receiverId');\n    data.userName = this.userInfo.firstName;\n    if (event.keyCode) {//13 is keycode of enter key\n\n      this.SocketService.userTyping(data);\n\n    }\n\n  }//end userTyping\n\n  public typing: any = () => {\n\n    this.SocketService.typingInRoom()\n      .subscribe((data) => {\n\n        if(this.receiverId === data.room){\n        this.personTyping = data.userName;\n      }\n        setTimeout(() => {\n          this.personTyping = \"\";\n        }, 2000);\n\n      });//end subscribe\n  }//end typing\n\n  public createGroup = () => {\n\n    if (this.groupName === \"\" || this.groupName === null || this.groupName === undefined) {\n      this.toastr.warning(\"Group Name required\", \"Warning!\");\n    }\n    else {\n      let data: any = {}\n      data.email = this.userInfo.email;\n      data.grpname = this.groupName;\n      this.groupName = \" \";\n\n      this.AppService.createGroup(data)\n        .subscribe((apiResponse) => {\n          if (apiResponse.status == 200) {\n            this.toastr.success(`Group: ${data.grpname} created`, \"Successfully!\");\n            this.userInfo.groups.push(apiResponse.data.roomId);\n            this.AppService.setUserInfoInLocalStorage(this.userInfo);\n            this.loadGroup();\n            this.SocketService.groupAdded(data.grpname);\n          }\n          else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        }, (error) => {\n          this.toastr.error(\"Some error Occurred\", \"Error!\");\n        });//end subscribe\n    }//end else\n  }//end createGroup\n\n  public loadGroup = () => {\n\n    this.AppService.getGroups().subscribe((apiResponse) => {\n      this.otherGroups = [];\n      this.groupsJoined = [];\n      if (apiResponse.status == 200) {\n\n        for (let group of apiResponse.data) {\n          let flag = false;\n          for (let userGroupId of this.userInfo.groups) {\n            if (group.roomId === userGroupId && group.status != false) {\n              this.groupsJoined.push(group)\n              flag = true;\n              break;\n            }//end if\n          }//end inner for\n          if (!flag && group.status != false) {\n            this.otherGroups.push(group);\n          }\n          if (this.userInfo.groups.length === 0) {\n            this.otherGroups = apiResponse.data;\n            break;\n          }\n        }//end external for loop\n\n      }//end if for success\n      else {\n        this.toastr.error(apiResponse.message, \"Error!\");\n      }//end else if error\n    },\n      (error) => {\n        this.toastr.error(\"Some Error Occurred\", \"Error!\");\n      });//end subscribe \n\n  }//end loadGroup\n\n  public joinGroup = (name, id) => {\n\n    let data: any = {};\n    data.userEmail = this.userInfo.email;\n    data.roomId = id;\n    data.userId = this.userInfo.userId;\n\n    this.AppService.joinGroup(data).subscribe((apiResponse) => {\n      console.log(apiResponse)\n      if (apiResponse.status == 200) {\n        this.toastr.success(`Chat Group: ${name} Joined`, \"Success!\");\n        this.userInfo.groups.push(id);\n        this.AppService.setUserInfoInLocalStorage(this.userInfo);\n        this.loadGroup();\n        this.SocketService.joinGroup(data);\n        this.userSelectedToChat(id, name);\n      }\n      else {\n        this.toastr.error(apiResponse.message, \"Error!\");\n      }\n    }, (error) => {\n      this.toastr.error(\"Some error occurred\", \"Error!\");\n    })//end subscribe\n\n  }//end joinGroup\n\n  public closeGroup = () => {\n\n    this.AppService.closeGroup(this.receiverId)\n      .subscribe((apiResponse) => {\n\n        if (apiResponse.status == 200) {\n          this.SocketService.groupClosed(this.receiverName);\n          Cookie.set('receiverId', this.userInfo.userId);\n          Cookie.set('receiverName', ``);\n          this.receiverId = Cookie.get('receiverId');\n          this.receiverName = Cookie.get('receiverName');\n          this.userSelectedToChat(this.receiverId, this.receiverName);\n        }\n        else {\n          this.toastr.error(apiResponse.message, '!Error');\n        }\n      },\n        (error) => {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n        });//end subscribe\n\n  }//end closeGroup\n\n  public refreshGroups = () => {\n\n    this.SocketService.closedGroup()\n      .subscribe((data) => {\n\n        this.toastr.info(`Group Closed: ${data}`, \"Update\");\n        this.loadGroup();\n\n      });//end subscribe\n  }//end refreshGroups\n\n\n  public sendInvite = () => {\n    let data: any = {};\n\n    data.userEmail = this.userMail;\n    data.roomId = this.receiverId;\n\n    this.AppService.sendInvite(data)\n      .subscribe((apiResponse) => {\n\n        if (apiResponse.status == 200) {\n          this.toastr.info(`Mail Sent to: ${data.userEmail}`, \"Update\");\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error!\");\n        }\n      }, (error) => {\n        this.toastr.error(\"Some Error Occurred\", \"Error!\");\n      })//end subscribe\n\n  }//end sendInvite\n\n\n  public deleteGroup = () => {\n\n    this.receiverId = Cookie.get('receiverId');\n    this.AppService.deleteGroup(this.receiverId)\n      .subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.SocketService.groupDeleted(this.receiverName);\n          Cookie.set('receiverId', this.userInfo.userId);\n          Cookie.set('receiverName', ``);\n          this.receiverId = Cookie.get('receiverId');\n          this.receiverName = Cookie.get('receiverName');\n          this.userSelectedToChat(this.receiverId, this.receiverName);\n        }\n      })//end subscribe\n  }//end deleteGroup\n\n\n\n  public sendMessage: any = () => {\n\n    if(this.messageText){\n\n      let chatMsgObject : ChatMessage = {\n        senderName: this.userInfo.firstName + \" \" + this.userInfo.lastName,\n        senderId: this.userInfo.userId,\n        receiverName: Cookie.get('receiverName'),\n        receiverId: Cookie.get('receiverId'),\n        message: this.messageText,\n        createdOn: new Date()\n      } // end chatMsgObject\n      console.log(chatMsgObject);\n      this.SocketService.SendChatMessage(chatMsgObject)\n      this.pushToChatWindow(chatMsgObject)\n      \n\n    }\n    else{\n      this.toastr.warning('text message can not be empty')\n\n    }\n\n } // end sendMessage\n\n\n public pushToChatWindow: any = (data) => {\n\n  this.messageText = \"\";\n  this.messageList.push(data);\n  this.scrollToChatTop = false;\n\n}//end pushToChatWindow\n\npublic getMessageFromAGroup: any = () => {\n\n  this.SocketService.groupChatMessage()\n    .subscribe((data) => {\n    \n      if (data.receiverId === this.receiverId && data.senderId != this.userInfo.userId) {\n        this.messageList.push(data);\n      }\n      console.log(data)\n      this.toastr.success(`${data.senderName} says : ${data.message}`);\n\n      this.scrollToChatTop = false;\n\n    });//end subscribe\n\n}//end getMessageFromAGroup\n\n/*\n public getMessageFromAUser: any =()=>{\n\n  this.SocketService.chatByUserId(this.userInfo.userId)\n  .subscribe((data)=>{\n   \n\n    (this.receiverId==data.senderId)?this.messageList.push(data):'';\n\n    this.toastr.success(`${data.senderName} says : ${data.message}`)\n\n    this.scrollToChatTop=false;\n\n  });//end subscribe\n}// end get message from a user \n\n\n*/\n/*\n\npublic groupJoined: any =()=>{\n\n  this.SocketService.groupJoined()\n  .subscribe((data)=>{\n   \n    this.toastr.success(` joined`)\n\n    this.scrollToChatTop=false;\n\n  });//end subscribe\n}// end get message from a user \n*/\n\n\n\n  public logout: any = () => {\n\n    this.AppService.logout()\n      .subscribe((apiResponse) => {\n\n        if (apiResponse.status === 200) {\n          console.log(\"logout called\")\n          Cookie.delete('authtoken');\n\n          Cookie.delete('receiverId');\n\n          Cookie.delete('receiverName');\n\n          this.SocketService.exitSocket()\n\n          this.router.navigate(['/']);\n\n        } else {\n          this.toastr.error(apiResponse.message)\n\n        } // end condition\n\n      }, (err) => {\n        this.toastr.error('some error occured')\n\n\n      });\n\n  } // end logout\n\n  // handle the output from a child component \n\n  public showGroupName =(name:string)=>{\n\n    this.toastr.success(\"You are chatting with \"+name)\n\n  }\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <br>\\n  <br>\\n  <div class=\\\"row\\\" style=\\\"text-align:center\\\">\\n\\n    <div class=\\\"col-12\\\">\\n\\n\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h3>\\n            <strong>Chat Group Name : {{roomName}}</strong>\\n          </h3>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <h4 class=\\\"card-title\\\">Members</h4>\\n          <hr>\\n          <div *ngFor=\\\"let member of members\\\">\\n            <div>{{member.name}}</div>\\n          </div>\\n          <br>\\n          <hr>\\n          <br>\\n          <div *ngIf=\\\"admin\\\">\\n              <h4 class=\\\"card-title\\\">Admin</h4>\\n              <hr>      \\n                <div>{{admin.name}}</div>\\n              <br>\\n              <hr>\\n              <br>\\n          </div>\\n          \\n          \\n          \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/editGroupDetails',receiverId]\\\">Edit</a>\\n            </div>\\n\\n            <br><br>\\n\\n            <div class=\\\"col-md-6\\\">\\n              <a class=\\\"btn btn-warning\\\" (click)=\\\"goBackToPreviousPage()\\\">Go Back </a>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n\\n\\n\\n    </div>\\n\\n\\n  </div>\\n  <hr>\\n\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { ActivatedRoute, Router } from '../../../../node_modules/@angular/router';\nimport { AppService } from '../../app.service';\nimport { ToastrService } from '../../../../node_modules/ngx-toastr';\nimport { SocketService } from '../../socket.service';\n\nimport {Location} from '@angular/common';\n\n\n@Component({\n  selector: 'app-chat-group-details',\n  templateUrl: './chat-group-details.component.html',\n  styleUrls: ['./chat-group-details.component.css'],\n  providers: [Location]\n})\nexport class ChatGroupDetailsComponent implements OnInit {\n\n  public roomId: any;\n  public roomName: string;\n  public admin: string;\n  public members: any = [];\n\n  public receiverId:string;\n\n  constructor(\n    public route: ActivatedRoute,\n    public router: Router,\n    public appService: AppService,\n    public toastr: ToastrService,\n    public location:Location\n  ) { }\n\n  ngOnInit() {\n\n    this.receiverId = this.route.snapshot.paramMap.get('receiverId');\n\n    console.log(this.receiverId)\n\n    this.appService.getGroup(this.receiverId)\n      .subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.members = apiResponse.data.members;\n          console.log(this.members)\n          this.roomName = apiResponse.data.roomName;\n          console.log(this.roomName)\n          this.admin = apiResponse.data.admin;\n          console.log(apiResponse);\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error!\");\n        }\n      },\n        (error) => {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n        })//end subscribe\n  }\n\n  public goBackToPreviousPage():any{\n    this.location.back();\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  chat-group-join works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n@Component({\n  selector: 'app-chat-group-join',\n  templateUrl: './chat-group-join.component.html',\n  styleUrls: ['./chat-group-join.component.css']\n})\nexport class ChatGroupJoinComponent implements OnInit {\n\n  constructor(\n    public router: Router,\n    public _route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    let receiverId: string = this._route.snapshot.paramMap.get('receiverId');\n    let receiverName: string = this._route.snapshot.paramMap.get('receiverName');\n    Cookie.set('receiverId', receiverId);\n    Cookie.set('receiverName', receiverName);\n    Cookie.set('callMethod', 'true');\n\n    this.router.navigate(['/chat']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatRouteGuardService implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n\n    console.log(\"in guard service\");\n\n    if (Cookie.get('authtoken') === undefined || Cookie.get('authtoken') === '' || Cookie.get('authtoken') === null) {\n\n      this.router.navigate(['/']);\n\n      return false;\n\n    } else {\n\n      return true;\n\n    }\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChatBoxComponent } from './chat-box/chat-box.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\n\n//for toast message\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { RemoveSpecialCharPipe } from './../shared/pipe/remove-special-char.pipe';\nimport { ChatRouteGuardService } from './chat-route-guard.service';\nimport { ChatGroupJoinComponent } from './chat-group-join/chat-group-join.component';\nimport { ChatGroupDetailsComponent } from './chat-group-details/chat-group-details.component';\nimport { EditChatGroupDetailsComponent } from './edit-chat-group-details/edit-chat-group-details.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule, \n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    RouterModule.forChild([ \n      { path: 'chat', component: ChatBoxComponent , canActivate : [ChatRouteGuardService]},\n      { path: 'joinGroup/:receiverId/:receiverName', component: ChatGroupJoinComponent, canActivate: [ChatRouteGuardService]},\n      { path:'groupDetails/:receiverId' , component:ChatGroupDetailsComponent },\n      { path:'editGroupDetails/:receiverId', component:EditChatGroupDetailsComponent}\n    ]),\n    SharedModule\n  ],\n  declarations: [ChatBoxComponent,RemoveSpecialCharPipe, ChatGroupJoinComponent, ChatGroupDetailsComponent, EditChatGroupDetailsComponent],\n  providers : [ChatRouteGuardService]\n})\nexport class ChatModule { }\n\n\n","module.exports = \".ng-valid[required], .ng-valid.required  {\\n    border-left: 5px solid #42A948; /* green */\\n  }\\n  \\n  .ng-invalid:not(form)  {\\n    border-left: 5px solid #a94442; /* red */\\n  }\"","module.exports = \"<!--\\n<div class=\\\"input-group mb-3\\\">\\n  \\n  <input #userName1=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" aria-label=\\\"Username\\\" aria-describedby=\\\"basic-addon1\\\" [(ngModel)]='roomName' required>\\n  <div [hidden]=\\\"userName1.pristine || userName1.valid\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n    Group Name Required\\n  </div>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChatRoomName()\\\">Save</button>\\n</div>\\n-->\\n<!--\\n<div class=\\\"container\\\">\\n  <h3>Edit Chat Room</h3>\\n  <div class=\\\"row\\\" style=\\\"text-align:left\\\">\\n    <div class=\\\"col-md-3 input-group\\\">\\n\\n\\n\\n        <div>\\n          <label>Name Room Title</label>\\n          <input #userName1=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Room Name\\\" aria-label=\\\"RoomName\\\" aria-describedby=\\\"basic-addon1\\\" [(ngModel)]='roomName' required>\\n        </div>\\n\\n        <div [hidden]=\\\"userName1.valid || userName1.pristine\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n          Room name is required\\n        </div>  \\n        \\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"saveChatRoomName()\\\">Save Changes</button>\\n\\n    </div>\\n\\n  </div>\\n\\n</div>\\n-->\\n\\n<div class=\\\"container\\\">\\n  <br>\\n  <br>\\n  <div class=\\\"row\\\" style=\\\"text-align:center\\\">\\n\\n    <div class=\\\"col-12\\\">\\n\\n\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h3>\\n            <strong>\\n\\n              <div>\\n                <label>Group Name</label>\\n                <input #userName1=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Group Name\\\" aria-label=\\\"RoomName\\\" aria-describedby=\\\"basic-addon1\\\"\\n                  [(ngModel)]='roomName' required>\\n              </div>\\n\\n              <div [hidden]=\\\"userName1.valid || userName1.pristine\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                Group name is required\\n              </div>\\n\\n\\n            </strong>\\n          </h3>\\n        </div>\\n        <div class=\\\"card-body row\\\">\\n\\n          <div class=\\\"col-md-6\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"saveChatRoomName()\\\">Save Changes</button>\\n          </div>\\n\\n          <div class=\\\"col-md-6\\\">\\n            <a class=\\\"btn btn-warning\\\" (click)=\\\"goBackToPreviousPage()\\\">Go Back </a>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n\\n\\n\\n  </div>\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { ActivatedRoute, Router } from '../../../../node_modules/@angular/router';\nimport { AppService } from '../../app.service';\nimport { ToastrService } from '../../../../node_modules/ngx-toastr';\nimport { SocketService } from '../../socket.service';\n\nimport {Location} from '@angular/common';\n\n\n\n@Component({\n  selector: 'app-edit-chat-group-details',\n  templateUrl: './edit-chat-group-details.component.html',\n  styleUrls: ['./edit-chat-group-details.component.css'],\n  providers: [Location]\n})\nexport class EditChatGroupDetailsComponent implements OnInit {\n\n  public roomId: any;\n  public roomName: string;\n  public admin: string;\n  public members: any = [];\n\n  \n  constructor(\n    public route: ActivatedRoute,\n    public router: Router,\n    public appService: AppService,\n    public toastr: ToastrService,\n    public location:Location\n  ) { }\n\n  ngOnInit() {\n   \n    let receiverId: string = this.route.snapshot.paramMap.get('receiverId');\n    this.roomId = receiverId;\n    this.appService.getGroup(receiverId)\n      .subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.members = apiResponse.data.members;\n          console.log(this.members)\n          this.roomName = apiResponse.data.roomName;\n          console.log(this.roomName)\n          this.admin = apiResponse.data.admin;\n          console.log(apiResponse);\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error!\");\n        }\n      },\n        (error) => {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n        })//end subscribe\n\n  }\n\n\n\n  public saveChatRoomName() {\n\n    let data: any = {}\n    data.chatRoomId = this.roomId;\n    data.roomName = this.roomName;\n\n    console.log(data);\n    this.appService.editGroup(data)\n      .subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.toastr.success(\"Group Name Changed\");\n          this.router.navigate(['/chat']);\n          Cookie.set('receiverName', data.roomName);\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error!\");\n        }\n      },\n        (error) => {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n        }\n      );//end subscribe\n  }//end saveName\n\n\n\n  public goBackToPreviousPage():any{\n    this.location.back();\n  }\n\n}\n","module.exports = \".crop {\\n    border-radius: 100%;\\n    line-height: 1em;\\n    padding: 1em;\\n    text-align: center;\\n    margin: 0em;\\n    width: 3em;\\n    height: 3em;\\n    float: left;\\n    text-transform: uppercase;\\n  }\"","module.exports = \"<div (click)='nameClicked()'  class=\\\"crop\\\" [style.color]=\\\"userColor ? userColor :'white'\\\" [style.background]=\\\"userBg ? userBg :'blue'\\\">\\n  {{firstChar}}\\n</div>\"","import { Component, OnChanges, Input, EventEmitter, Output, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'first-char',\n  templateUrl: './first-char.component.html',\n  styleUrls: ['./first-char.component.css']\n})\nexport class FirstCharComponent implements OnInit,OnChanges {\n\n  @Input() name: string;\n  @Input() userBg: string;\n  @Input() userColor: string;\n\n  public firstChar: string;\n  private _name:string = '';\n\n  @Output()\n  notify: EventEmitter<String> = new EventEmitter<String>();\n\n\n\n  ngOnInit(): void {\n      this._name = this.name;\n      this.firstChar = this._name[0];\n\n  } // end ngOnInit\n\n\n  ngOnChanges(changes: SimpleChanges){\n    let name  = changes.name;\n    this._name = name.currentValue;\n    this.firstChar = this._name[0];\n  }\n\n\n  nameClicked(){\n    this.notify.emit(this._name);\n  }\n\n  \n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'removeSpecialCharPipe'\n})\nexport class RemoveSpecialCharPipe implements PipeTransform {\n\n    transform(value: string, character: string): string {\n\n        return value.replace(character, '');\n\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { FormsModule } from '@angular/forms';\nimport { FirstCharComponent } from './first-char/first-char.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [UserDetailsComponent, FirstCharComponent],\n  exports: [\n    UserDetailsComponent,\n    FirstCharComponent,\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class SharedModule { }\n","module.exports = \".crop {\\n    border-radius: 100%;\\n    line-height: 1em;\\n    padding: 1em;\\n    text-align: center;\\n    margin: 0em;\\n    width: 3em;\\n    height: 3em;\\n    float: left;\\n    text-transform: uppercase;\\n  }\\n  \\n  .about {\\n    float: left;\\n    padding-left: 0.4em;\\n  }\\n  \\n  .online,\\n  .offline,\\n  .me,\\n  .warning {\\n    margin-right: 3px;\\n    font-size: 0.8em;\\n  }\\n  \\n  .online {\\n    color: #86BB71;\\n  }\\n  \\n  .offline {\\n    color: #E38968;\\n  }\\n  \\n  .me {\\n    color: #94C2ED;\\n  }\\n  \\n  .warning {\\n    color: #00c8e7;\\n  }\\n  \\n  .status {\\n    color: #92959E;\\n  }\\n  \\n  .name {\\n    float: left;\\n  }\"","module.exports = \"<div class=\\\"crop\\\" [style.color]=\\\"userColor ? userColor :'white'\\\" [style.background]=\\\"userBg ? userBg :'blue'\\\">\\n  {{firstChar}}\\n</div>\\n<div class=\\\"about\\\">\\n  <div class=\\\"name\\\">{{userFirstName}} {{userLastName}}\\n    <i *ngIf=\\\"messageRead\\\" class=\\\"fa fa-circle warning\\\"></i>\\n  </div>\\n  <div class=\\\"status\\\">\\n    <i class=\\\"fa fa-circle\\\" [ngClass]=\\\"userStatus\\\"></i>{{userStatus}}\\n  </div>\\n</div>\\n\"","import { Component, OnChanges, Input, EventEmitter, Output, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n  @Input() userFirstName: any;\n  @Input() userLastName: string;\n  @Input() userStatus: string;\n  @Input() messageRead: string;\n\n  \n  public firstChar: string;\n\n\n  ngOnInit(): void {\n\n      this.firstChar = this.userFirstName[0];\n\n  } // end ngOnInit\n\n\n  // handling the click\n\n\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport * as io from 'socket.io-client';\n\nimport { Observable, throwError } from 'rxjs';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse, HttpParams } from \"@angular/common/http\";\n\n@Injectable()\n\nexport class SocketService {\n\n  private url = 'http://api-chatapp.emayurm.in.net';\n\n  private socket;\n\n\n  constructor(public http: HttpClient) {\n    // connection is being created.\n    // that handshake\n    this.socket = io(this.url);\n\n  }\n\n  \n  // events to be listened \n  public verifyUser = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on('verifyUser', (data) => {\n\n        observer.next(data);\n\n      }); // end Socket\n\n    }); // end Observable\n\n  } // end verifyUser\n\n  public onlineUserList = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"online-user-list\", (userList) => {\n\n        observer.next(userList);\n\n      }); // end Socket\n\n    }); // end Observable\n\n  } // end onlineUserList\n\n\n  public authError = () => {\n    return Observable.create((observer) => {\n\n      this.socket.on('auth-error', (data) => {\n\n        observer.next(data);\n\n      })//end socket\n\n    });//end observer\n\n  }//end authError\n\n  public typingInRoom = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"typing\", (data) => {\n\n        observer.next(data);\n\n      });//endsocket \n\n    });//end Observable\n\n  }//end typingInRoom\n\n\n\n  public groupCreated = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"GroupCreated\", (data) => {\n\n        observer.next(data);\n\n      });//endsocket \n\n    });//end Observable\n\n  }//end activeInRoom\n\n  public closedGroup = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"closedGroup\", (data) => {\n\n        observer.next(data);\n\n      });//endsocket \n\n    });//end Observable\n\n  }//end activeInRoom\n\n  public groupRemoved = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"GroupRemoved\", (data) => {\n\n        observer.next(data);\n\n      });//endsocket \n\n    });//end Observable\n\n  }//end activeInRoom\n\n\n  public disconnectedSocket = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"disconnect\", () => {\n\n        observer.next();\n\n      }); // end Socket\n\n    }); // end Observable\n\n  } // end disconnectSocket\n\n  //end event to be listened\n\n\n  // events to be emitted\n\n  public setUser = (authToken) => {\n\n    this.socket.emit(\"set-user\", authToken);\n\n  } // end setUser\n\n  public groupAdded = (data) => {\n\n    this.socket.emit(\"newGroup\", data);//endsocket \n\n  }//end Group Added\n\n  public groupClosed = (data) => {\n\n    this.socket.emit(\"GroupClosed\", data);//endsocket \n\n  }//end Group Closed\n  \n  public joinGroup = (data) => {\n\n    this.socket.emit(data.userId, data);\n\n  }//end joinGroup\n\n  public userTyping = (data) => {\n\n    this.socket.emit(\"userTyping\", data);\n\n  }//end userTyping\n\n\n  public groupDeleted = (data) => {\n\n    this.socket.emit(\"GrpDeleted\", data);//endsocket \n\n  }//end Group Deleted\n\n\n  // end events to be emitted\n\n\n  // chat related methods \n\n  public chatByUserId = (userId) => {\n\n    return Observable.create((observer) => {\n      \n      this.socket.on(userId, (data) => {\n\n        observer.next(data);\n\n      }); // end Socket\n\n    }); // end Observable\n\n  } // end chatByUserId\n\n  public SendChatMessage = (chatMsgObject) => {\n\n    console.log(chatMsgObject)\n    this.socket.emit('chat-msg', chatMsgObject);\n\n  } // end getChatMessage\n\n\n  public groupChatMessage = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on('message', (data) => {\n\n        console.log(data)\n        observer.next(data);\n\n      });//end socket\n\n    });//end observable\n\n  }//end groupChatMessage\n\n\n  public exitSocket = () =>{\n\n    this.socket.disconnect();\n\n  }// end exit socket\n\n\n  private handleError(err: HttpErrorResponse) {\n\n    let errorMessage = '';\n\n    if (err.error instanceof Error) {\n\n      errorMessage = `An error occurred: ${err.error.message}`;\n\n    } else {\n\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n\n    } // end condition *if\n\n    console.error(errorMessage);\n\n    return Observable.throw(errorMessage);\n\n  }  // END handleError\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">GroupChat App</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" (click)=\\\"goToSignUp()\\\">Sign-Up</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">GroupChat Sign in</h2>\\n\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\\n    <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required autofocus>\\n\\n    <br>\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"sendResetLinkFunction()\\\">Send Reset Link</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//for Service\nimport { AppService } from '../../app.service';\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n public email : String;\n  constructor(public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n\n  public sendResetLinkFunction : any = () => {\n\n    if (!this.email) {\n      this.toastr.warning('enter email address')\n    }\n    this.appService.sendResetLink(this.email)\n      .subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.toastr.success(\"Reset Link Sent SuccessFully\", \"Success!\");\n          setTimeout(() => {\n            this.router.navigate(['/login']);\n          }, 2000);\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error! Try Again\");\n        }\n      },\n        (error) => {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n        });\n\n  }//end of sendResetLink \n\n\n  public goToSignUp() {\n    this.router.navigate(['/signup']);\n  }//end goToSignUp\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">My Chat</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" (click)=\\\"goToSignUp()\\\">SignUp</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">Please sign in</h2>\\n\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\\n    <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required autofocus>\\n\\n    <br>\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\\n    <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n\\n    <br>\\n\\n\\n    <a [routerLink]=\\\"['/forgetPassword']\\\">Forgot Password ?</a>\\n\\n    <br><br>\\n\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"signinFunction()\\\">Sign in</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\\n\"","import { Component, OnInit,ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { AppService } from './../../app.service';\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public email: any;\n  public password: any;\n\n  constructor(\n    public appService: AppService,\n    public router: Router,\n    private toastr: ToastrService,\n  ) {}\n\n  ngOnInit() {\n  }\n\n  public goToSignUp: any = () => {\n\n    this.router.navigate(['/signup']);\n\n  } // end goToSignUp\n\n  public signinFunction: any = () => {\n\n    if (!this.email) {\n      this.toastr.warning('enter email')\n\n\n    } else if (!this.password) {\n\n      this.toastr.warning('enter password')\n\n\n    } else {\n\n      let data = {\n        email: this.email,\n        password: this.password\n      }\n\n      this.appService.signinFunction(data)\n        .subscribe((apiResponse) => {\n\n          if (apiResponse.status === 200) {\n            console.log(apiResponse)\n\n             Cookie.set('authtoken', apiResponse.data.authToken);\n             Cookie.set('receiverId', apiResponse.data.userDetails.userId);\n         //    Cookie.set('receiverName', apiResponse.data.userDetails.firstName + ' ' + apiResponse.data.userDetails.lastName);\n             this.appService.setUserInfoInLocalStorage(apiResponse.data.userDetails)\n            \n             this.router.navigate(['/chat']);\n\n          } else {\n\n            this.toastr.error(apiResponse.message)\n          \n\n          }\n\n        }, (err) => {\n          this.toastr.error('Incorrect email Id or password')\n\n        });\n\n    } // end condition\n\n  } // end signinFunction\n\n  \n\n  \n\n}","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">GroupChat App</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" (click)=\\\"goToSignUp()\\\">Sign-Up</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">Password Reset</h2>\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\\n    <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n\\n    <br>\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Confirm Password</label>\\n\\n    <input type=\\\"password\\\" id=\\\"inputPassword1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\" required>\\n\\n    <br>\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"resetPassword()\\\">Change Password</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//for Service\nimport { AppService } from '../../app.service';\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  public password: string;\n  public confirmPassword: string;\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public userId: string = this._route.snapshot.paramMap.get('userId');\n\n  public data: any = {};\n\n  public resetPassword = () => {\n\n    if (this.matchPassword()) {\n      this.data.userId = this.userId;\n      this.data.password = this.password;\n      this.appService.resetPassword(this.data)\n        .subscribe((apiResponse) => {\n          if (apiResponse.status == 200) {\n            this.toastr.success(\"Password Reset Succesfull\", \"Success!\");\n            setTimeout(() => {\n              this.router.navigate(['/']);\n            }, 2000);\n          }\n          else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n          (error) => {\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n          });\n    }\n    else {\n      this.toastr.error(\"Password Mismatch\", \"Error!\");\n    }\n  }\n\n  public matchPassword = () => {\n    if (this.password === this.confirmPassword) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }//end matchPassword\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">My Chat</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" (click)=\\\"goToSignIn()\\\">SignIn</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">Sign Up To Start Chat</h2>\\n\\n    <br>\\n\\n    <span>FirstName: </span>\\n\\n    <label for=\\\"inputFirstName\\\" class=\\\"sr-only\\\">FirstName</label>\\n\\n    <input type=\\\"text\\\" id=\\\"inputFirstName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"firstName\\\" placeholder=\\\"FirstName\\\" required autofocus>\\n\\n    <br>\\n\\n    <span>LastName: </span>\\n\\n    <label for=\\\"inputLastName\\\" class=\\\"sr-only\\\">LastName</label>\\n\\n    <input type=\\\"text\\\" id=\\\"inputLastName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"lastName\\\" placeholder=\\\"LastName\\\" required>\\n\\n    <br>\\n\\n    <span>Mobile: </span>\\n\\n    <label for=\\\"inputMobile\\\" class=\\\"sr-only\\\">Mobile</label>\\n\\n    <input type=\\\"number\\\" id=\\\"inputMobileNumber\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"mobileNumber\\\" placeholder=\\\"Mobile Number\\\" required>\\n\\n    <br>\\n\\n    <span>Email: </span>\\n\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\\n    <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required>\\n\\n    <br>\\n\\n    <span>Password: </span>\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\\n    <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n\\n    <br>\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"signupFunction()\\\">Sign Up</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\\n\\n\"","import { Component, OnInit,ViewContainerRef } from '@angular/core';\nimport { AppService } from './../../app.service';\nimport { Router } from '@angular/router';\n\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//import for Routing\n \n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  public firstName: any;\n  public lastName: any;\n  public mobileNumber: any;\n  public email: any;\n  public password: any;\n\n  constructor(  \n    public appService: AppService,\n    public router: Router,\n    private toastr: ToastrService\n  ){\n\n  } \n\n  ngOnInit() {\n  }\n\n  public goToSignIn: any = () => {\n\n    this.router.navigate(['/']);\n\n  } // end goToSignIn\n\n  public signupFunction: any = () => {\n\n    if (!this.firstName) {\n      this.toastr.warning('enter first name')\n  \n    } else if (!this.lastName) {\n      this.toastr.warning('enter last name')\n\n    } else if (!this.mobileNumber) {\n      this.toastr.warning('enter mobile')\n\n    } else if (!this.email) {\n      this.toastr.warning('enter email')\n\n    } else if (!this.password) {\n      this.toastr.warning('enter password')\n     \n    } else {\n\n      let data = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        mobileNumber: this.mobileNumber,\n        email: this.email,\n        password: this.password,\n      }\n\n      console.log(data);\n\n      this.appService.signupFunction(data)\n        .subscribe((apiResponse) => {\n\n          console.log(apiResponse);\n\n          if (apiResponse.status === 200) {\n\n            this.toastr.success('Signed up','Successful..!');\n\n            setTimeout(() => {\n\n              this.goToSignIn();\n\n            }, 2000);\n\n          } else {\n\n            this.toastr.error(apiResponse.message,'error occured');\n\n          }\n\n        }, (err) => {\n\n          this.toastr.error('Try Again','Error!');\n\n        });\n\n    } // end condition\n\n  } // end signupFunction\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n//for toast message\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    RouterModule.forChild([\n      { path: 'signup', component: SignupComponent },\n      { path:'forgetPassword', component: ForgotPasswordComponent },\n      { path:'resetPassword/:userId', component : ResetPasswordComponent }\n    ])\n  ],\n  declarations: [LoginComponent, SignupComponent, ForgotPasswordComponent, ResetPasswordComponent]\n})\nexport class UserModule { }\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}